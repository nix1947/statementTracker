# Generated by Django 5.2 on 2025-05-07 14:58

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Bank Name')),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('bank_account_no', models.CharField(max_length=50)),
                ('bank_trans_id', models.CharField(max_length=100, null=True)),
                ('bank_deposit_date', models.DateField()),
                ('cheque_no', models.CharField(blank=True, max_length=50, null=True)),
                ('policy_no', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_detail', models.TextField()),
                ('system_voucher_no', models.CharField(max_length=100, unique=True)),
                ('system_value_date', models.DateField()),
                ('debit', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('credit', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('used_in_system', models.BooleanField(default=False)),
                ('reconciled_date', models.DateField(blank=True, null=True)),
                ('voucher_amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=18, null=True)),
                ('reverse_voucher_no', models.CharField(blank=True, max_length=100, null=True)),
                ('reversal_correction_voucher_no', models.CharField(blank=True, max_length=100, null=True)),
                ('refund_voucher_no', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('source', models.CharField(blank=True, choices=[('Cheque', 'Cheque'), ('BankVoucher', 'Physical Bank Voucher'), ('PhonePay', 'PhonePay'), ('ConnectIPS', 'ConnectIPS'), ('Esewa', 'Esewa'), ('Khalti', 'Khalti'), ('IMEPAY', 'IMEPAY'), ('NEPALPAY', 'NEPALPAY'), ('Other', 'Other')], max_length=50, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled'), ('Reconciled', 'Reconciled')], default='Pending', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('voucher_image', models.ImageField(blank=True, null=True, upload_to='voucher_images/')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statement_tracker.bank')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions_created', to=settings.AUTH_USER_MODEL)),
                ('reconciled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions_reconciled', to=settings.AUTH_USER_MODEL)),
                ('system_posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions_posted', to=settings.AUTH_USER_MODEL)),
                ('system_verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions_verified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-created_date'],
                'constraints': [models.UniqueConstraint(fields=('bank', 'bank_trans_id'), name='unique_bank_transaction')],
            },
        ),
    ]
